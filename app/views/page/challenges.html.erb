<h1> Java </h1>
<h1> Reto 1 </h1>

<p> Try this in your console:

function test(){ alert('test');}();
What happens?

Why?

How you could execute it only adding one more character to the sentence?

Explain why it works?
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
</p>
<br>
<br>

<h1> Reto 2 </h1>
<p> Try this in your console:

What does this print?

var stockOptionsCost = 10.70,
    paid = 20.80;

function calculateChange() {

    return paid - stockOptionsCost;
}

function calculateAmountOfStockOptions () {
    return paid / stockOptionsCost;
}

console.log( 'You purchased ' + calculateAmountOfStockOptions() + ' Stock Options.' )
console.log( 'Take your change [' + calculateChange()  + '] and thanks for buying with Bank Ruptcy' );
Why?

How could you fix it?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>

<br>
<br>

<h1> Reto 3 </h1>
<p> Try this in your console:

What does this print?

var bird = 'Pidgeons';
( function () {
    if ( typeof bird === 'undefined' ){
        var bird = 'Rubber Duck';
        console.log('Ernie loves his ' + bird );
    } else {
        console.log('Bert loves his ' + bird );
    }
}() );
Why?

How could you fix it?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 4 </h1>
<p> Try this in your console:

function test(){ alert('test');}();
What happens?

Why?

How you could execute it only adding one more character to the sentence?

Explain why it works?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Php </h1>
<h1> Reto 5 </h1>
<p> Try this in your console:

Using the PHP language, have the function PrimeTime(num) take the num parameter being passed and return the string true if the parameter is a prime number, otherwise return the string false. The range will be between 1 and 2^16. 

Use the Parameter Testing feature in the box below to test your code with different arguments.




</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 6 </h1>
<p> Try this in your console:

As you know Javascript has two different ways to treat the data it receives as arguments of a function:

Primitives are passed by copy
Complex Objects are passed by reference.
This mini-challenge is related with this topic.

var oPerson = { name: 'john'};                      // Define an object

(function(oTeacher) {                               // Create a closure to use the object in other function code.
   window.getTeacher= function() {
      console.log(oTeacher);
   };
}(oPerson));

window.getTeacher();                                // Get the teacher.

oPerson.surname = 'doe';                            // Augment the object.

window.getTeacher();                                // Get the teacher again.

oPerson = { name: 'mary', surname: 'sullivan' };    // Redefine an object

window.getTeacher();                                // Get the teacher again.
The first execution of window.getTeacher returns:

Object {name: "john"}
The second execution of window.getTeacher returns:

Object {name: "john", surname: "doe"}
The third execution of window.getTeacher returns:

Object {name: "john", surname: "doe"}
Can you explain what's the reason of this behaviour?

Can you see any problem about this behaviour?

How you could solve it?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 7 </h1>
<p> Try this in your console:

Read the following snippets of code:

Snippet 1:

var test;

if ( true ) {
    test = function () {
        console.log( "That's true" );
    };
} else {
    test = function () {
        console.log( "That's false" );
    };
}

test(); // Shows "That's true"
Snippet 2:

if ( true ) {
    function test() {
        console.log( "That's true" );
    }
} else {
    function test() {
        console.log( "That's false" );
    }
}

test(); // Shows "That's false"
Snippet 3:

var test;

if ( true ) {
    test = function () {
        console.log( "That's true" );
    };
} else {
    function test() {
        console.log( "That's false" );
    }
}

test(); // Shows "That's true"
What's the reason of this behaviour?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 8 </h1>
<p> Try this in your console:

What does this print?

var name = 'John',
    obj = {
        name: 'James'
    },
    Animal,
    mammal;

Animal = function(){};
Animal.prototype.name = 'animal';

mammal = new Animal();

delete name;

console.log(name);

delete obj.name;

console.log(obj.name);

delete obj.toString;

console.log(obj.toString);

delete mammal.name;

console.log(mammal.name);
Why?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Phyton </h1>
<h1> Reto 9 </h1>
<p> Try this in your console:

To accomplish a task you need to detect Internet Explorer browsers without using browser sniffing.

The function to detect the browser can be executed in...

Opera
Chrome
Firefox
Phantom
Internet Explorer
... and it should return true only if the browser is Internet Explorer.

The function should detect only that browser is Internet Explorer, versions are not relevant, but you must perform the action with only one code.

Replace the FILL THE CODE comment with your own code to perform the requested task.

function isIE()
{
    // FILL THE CODE
}
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 10 </h1>
<p> Try this in your console:

Copy and run, individually, the next lines of code in your console:

console.log( 'mañana' === 'mañana' );

console.log( 'mañana' === 'mañana' );

What logs each of them?

Why the result is different?

How you could avoid this issue?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 11 </h1>
<p> Try this in your console:

Having this code:

function Order()
{
         this.aOrderLines = [];
         this.nOrderTotal = 0;
}
Order.prototype.getOrderLines = function()
{
         return this.aOrderLines;
};
Order.prototype.addOrderLine = function(oOrderLine)
{
         this.nOrderTotal += oOrderLine.nTotal;
         this.aOrderLines.push(oOrderLine);
};
Order.prototype.removeOrderLine = function(oOrderLineItem)
{
         var nOrderTotal;
         oOrderLine = this.aOrderLines.map(function(oOrder)
         {
                  return oOrder === oOrderLineItem;
         })[0];

         if(typeof oOrderLine === 'undefined' || oOrderLine === null)
         {
                  return;
         }
         this.nOrderTotal -= oOrderLine.nTotal;
         this.aOrderLines.splice(this.nOrderTotal, 1);
};
The problem in this code is that anyone could access aOrderLines and add or modify values without increasing or decreasing nOrderTotal.

Keep in mind that you have to implement a method to get aOrderLines to loop over its items but avoiding to modify the values.

How you could solve this problem?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 12 </h1>
<p> Try this in your console:

What does this print?

(function() {
    var values = [3, 8, '15', Math.MAX_VALUE, Infinity, -23],
        oddValues = [],
        index,
        lenValues = values.length,
        isOdd = function ( value ) {
            return value % 2 != 0;
        };

    while(lenValues--) {
        if ( isOdd( values[lenValues] ) ) {
            if(typeof values[lenValues] === 'undefined')
             {
             debugger;
             }
            oddValues.push( values[lenValues] );
        }
    }
    console.log( oddValues );
}());
Why?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> HTML5 </h1>
<h1> Reto 13 Geolocalización </h1>
<p> Descripción
Mostrar el recorrido trazado por una línea, desde el punto en el que te encuentras hasta la ubicación de la papaya.
Ubicación: Carrera 35 # 3O-2 a 3O-99
Cali, Valle Del Cauca, Colombia
3.435451, -76.546516
<br><br>
<%= image_tag("html1.png", :alt => "Geolocalización", width: 390, height: 290) %>
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 14 Canvas </h1>
<p> Realizar el siguiente diseño en canvas.
<br><br>	
<%= image_tag("html2.png", :alt => "canvas", width: 290, height: 290) %>

</p>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 15 </h1>
<p> Utilizando La API de html5  drag-drop desplazar los puntos de un div(recuadro) al otro.
<br><br>	
<%= image_tag("html3.png", :alt => "drag-drop", width: 290, height: 290) %>

</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 16 </h1>
<p> Utilizando localstorage realizar un listado con 5 actividades.
<br><br>	
<%= image_tag("html4.png", :alt => "localstorage") %>
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> ObjectiveC </h1>
<h1> Reto 17 </h1>
<p> Try this in your console:

What does this print?

var strMethod = 'valueOf',
    strProperty = 'length',
    value = [44 + 22][strMethod]()[strProperty];

console.log( value );

value = [44 + 22][strMethod][strProperty];

console.log( value );
Why?
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br>
<br>
<h1> Reto 18 </h1>
<p> Try this in your console:

Write the code needed to get the expected result and explain why:

var obj = {
    name: 'john',
    surname: 'doe'
};

// Write the code.

console.log( JSON.stringify( obj ) );   // Shows in the console { "name": "james", "surname": "sullivan" }
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>
<h1> Reto 19 </h1>
<p> Try this in your console:

Write the code needed to get the expected result and explain why:

var obj = {
    name: 'john',
    surname: 'doe'
};

// Write the code.

console.log( JSON.stringify( obj ) );   // Shows in the console { "name": "james", "surname": "sullivan" }
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>
<h1> Reto 20 </h1>
<p> Try this in your console:

Write the code needed to get the expected result and explain why:

var obj = {
    name: 'john',
    surname: 'doe'
};

// Write the code.

console.log( JSON.stringify( obj ) );   // Shows in the console { "name": "james", "surname": "sullivan" }
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>
<h1> Android </h1>
<h1> Reto 21 </h1>
<div data-configid="1814511/8413688" style="width: 525px; height: 413px;" class="issuuembed"></div><script type="text/javascript" src="//e.issuu.com/embed.js" async="true"></script>
<p> 

Crear conexiones para registro y login con un servidor externo usando MySql y PHP para el webservice y JSON para el envio de datos y retorno.

</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>
<h1> Reto 22 </h1>
<p> 

Crear barra de navegación vertical con los lenguajes de programación y bases de datos como menú y una vez da click llenara el datagrid con los códigos para mejorar o modificar por otros programadores (usando los registros de una base de datos).

</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>
<h1> Reto 23 </h1>
<p> 

Crear sistema de puntuación para programadores con mayores aportaciones en cada lenguaje para que sean reconocidos por la comunidad.
</p>
<br><br>
<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>
<h1> Reto 24 </h1>
<p> 
Crear la base de datos para el sistema optimizando la seguridad y la relación, usar procedimientos almacenados y funciones.

Creado por : Jhon Jarol Tabares Orozco

</p>
<br><br>
<h1>Ruby<h1>
<h1> Reto 25 </h1>
<h2> Install user points on ruby </h2>
<p> Try this in your console:

Write the code needed to get the expected result and explain why:

var obj = {
    name: 'john',
    surname: 'doe'
};

// Write the code.

console.log( JSON.stringify( obj ) );   // Shows in the console { "name": "james", "surname": "sullivan" }
</p>
<br><br>




<%= link_to (image_tag "qrcode.png", width: 290, height: 290), "/" %>
<br><br>